/** –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ç–∞–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä */
class TableClientController {
    /** –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ç–∞–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
     * @param {*} URL URL –±—ç–∫-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
     * @param {*} table  —Ç–∞–±–ª–∏—Ü–∞ —Ç–µ–º
     * @param {*} msgElement –∏–Ω—Ñ–æ—ç–ª–µ–º–µ–Ω—Ç
     * @param {*} form —Ñ–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {*} csrfToken csrf-—Ç–æ–∫–µ–Ω
     */
    constructor(URL, table, msgElement, form) {
        this.URL = URL;
        this.table = table;
        this.msgElement = msgElement;
        this.form = form;
        this.csrfToken = document.querySelector('meta[name="csrf-token"]');

        // —Ç–∞–±–ª–∏—Ü–∞
        if (this.table) {
            this.table
                .querySelectorAll(`.${this.table.id}__tr`)
                .forEach((row) => (row.onclick = (e) => this.clickRow(e)));
        }

        // —Ñ–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        if (this.form) {
            this.form.onsubmit = (event) => this.add(form, event);
        }
    }

    // –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ë–î
    add(form, event) {
        event.preventDefault();
        // –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
        let process = (data) => {
            if (data.result == 1) {
                this.processData(data.row, form);
            } else {
                this.msgElement.textContent = data.description;
            }
        };
        // –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        let formData = new FormData(form);
        // –∑–∞–≥–æ–ª–æ–≤–∫–∏
        let headers = {
            "X-CSRF-TOKEN": this.csrfToken.getAttribute("content"),
        };
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        ServerRequest.execute(
            this.URL,
            process,
            "post",
            this.msgElement,
            formData,
            headers
        );
    }

    remove(row) {
        // –∑–∞–≥–æ–ª–æ–≤–∫–∏
        let headers = {
            "X-CSRF-TOKEN": this.csrfToken.getAttribute("content"),
        };
        // –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
        let process = (data) => {
            if (data.result == 1) {
                // —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞
                row.remove();
                this.msgElement.textContent = "";
            } else {
                this.msgElement.textContent = data;
            }
        };
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        ServerRequest.execute(
            `${this.URL}/${row.id}`,
            process,
            "delete",
            this.msgElement,
            null,
            headers
        );
    }

    /** –∫–ª–∏–∫ —Å—Ç—Ä–æ–∫–∏ */
    clickRow(e) {
        this.click(e.target.closest("tr"));
    };

    /** –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ */
    click(row) {
        // –∫–ª–∏–∫ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–æ–∫—É
        if (row.classList.contains(`${this.table.id}__tr--active`)) {
            row.classList.remove(`${this.table.id}__tr--active`);
            row.querySelector("button").remove();
        } else {
            // –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            let activeRow = this.table.querySelector(
                `.${this.table.id}__tr--active`
            );
            if (activeRow) {
                activeRow.querySelector("button").remove();
                activeRow.classList.remove(`${this.table.id}__tr--active`);
            }
            // –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
            row.innerHTML += `<button id='${this.table.id}__btn-remove' class='h-full pe-2' title='–£–¥–∞–ª–∏—Ç—å'>üóë</button>`;
            row.lastChild.onclick = (e) => this.remove(e.target.closest("tr"));
            row.classList.add(`${this.table.id}__tr--active`);
        }
    }

    /** –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ë–î */
    processData(data, form) {
        alert("–Ω–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–∞ processData –∫–ª–∞—Å—Å–∞ TableFrontController");
    }
}
